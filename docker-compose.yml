services:
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - chattingo_net
    expose:
      - "3306"

  backend:
    image: ${DOCKERHUB_USER}/chattingo-backend:${BACKEND_TAG}
    restart: unless-stopped
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_PROFILES_ACTIVE: prod
      JWT_SECRET: ${JWT_SECRET}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      CORS_ALLOWED_METHODS: ${CORS_ALLOWED_METHODS}
      CORS_ALLOWED_HEADERS: ${CORS_ALLOWED_HEADERS}
    ports:
      - "8080:8080"
    networks:
      - chattingo_net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
        REACT_APP_WS_URL: ${REACT_APP_WS_URL}
    image: ${DOCKERHUB_USER}/chattingo-frontend:${FRONTEND_TAG}
    restart: unless-stopped
    depends_on:
      - backend
    ports:
    - "80:80"
    - "443:443"
    volumes:
    - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    # bind certs directory (created by certbot) into the container
    - /etc/letsencrypt:/etc/letsencrypt:ro
    # (optional) if you want to use a host folder for .well-known:
    - ./frontend/.well-known:/usr/share/nginx/html/.well-known:ro
    networks:
      - chattingo_net

volumes:
  db_data:

networks:
  chattingo_net:
    driver: bridge

