# frontend/nginx.conf
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name wapchat.duckdns.org;

    # Let certbot use port 80 (we stop the frontend container during cert issuance)
    location /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name wapchat.duckdns.org;

    root /usr/share/nginx/html;
    index index.html;

    # Let's Encrypt certificates (mounted into container)
    ssl_certificate /etc/letsencrypt/live/wapchat.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/wapchat.duckdns.org/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Serve React SPA
    location / {
        try_files $uri /index.html;
    }

    # API and auth proxy (same origin: /api and /auth)
    location /api/ {
        proxy_pass http://backend:8080/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Connection close;
        proxy_read_timeout 90;
        proxy_buffering off;
        proxy_cache_bypass $http_upgrade;
    }

    location /auth/ {
        proxy_pass http://backend:8080/auth/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Connection close;
        proxy_read_timeout 90;
        proxy_buffering off;
        proxy_cache_bypass $http_upgrade;
    }

    # WebSockets via /ws
    location /ws {
        proxy_pass http://backend:8080/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_buffering off;
    }


    # Optional: allow certbot webroot challenge to renew without stopping container
    location /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
        try_files $uri =404;
    }
}

